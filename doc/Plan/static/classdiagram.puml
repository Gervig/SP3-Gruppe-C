@startuml
'https://plantuml.com/class-diagram

class Main{
+ static void main(String[] args)
}

class Stream{
- String name
'utilities
- ArrayList<User> users
- ArrayList<Film> filmList
- ArrayList<Series> seriesList
- TextUI TextUI
- FileIO io
- String seriesDataPath
- String filmDataPath
- ArrayList<String> listOfActions;
- User currentUser;
- ArrayList<String> selectedVideos
- ArrayList<String> listOfMovies
- ArrayList<String> optionsForSaved
- ArrayList<String> listOfHistory
- ArrayList<String> listOfMenu
- ArrayList<String> listOfSearch
- ArrayList<String> searchResultList
- String selectedMovie
'constructor
+ Stream(String name)
'methods
- void setup()
' setup er til er at læse data
+ void runDialog()
' i runDialog kan man vælge at logge ind eller sign up
+ User createUser()
' createUser tjekker om der er andre med det brugernavn, når man laver en ny bruger
+ User loginUser()
+ Film stringToFilm(String str)
'laver strings om til film-objekter
+ void runStartMenu()
+ void searchForMovie()
+ void playMenu()
+ void quitProgram()
+ void watchingNow()
+ ArrayList<User> getUserNames()
+ void setFilmList(ArrayList<Film> filmList)
}


class User{
- String name
- ArrayList<Series> seenSeries
- ArrayList<Film> seenFilm
- ArrayList<Film> savedFilm
- String newPassword
+ User(String name, String newPassword)
+ void watchedFilm(Film film)
+ void addToSaved(Film film)
+ void removeFromSaved(Film film)
+ String getName()
+ String getPassword()
+ ArrayList<Series> getSeenSeries()
+ ArrayList<Film> getSeenFilm()
+ ArrayList<Film> getSavedFilm()
}

class FileIO{
- String userHistoryPath
- String userSavedPath
+ ArrayList<String> readUsers()
+ ArrayList<String> readFilmData(String path, int length)
+ ArrayList<String> readVideoData(String path, int length)
+ ArrayList<String> readVideoData(String path, String username)
+ static void saveData(ArrayList<User> users, String path)
+ static void saveVideoData(Video v, String path, String username)
+ ArrayList<String> readUserData(String path)
+ void deleteLineFromFile(String filePath, String matchString)
+ void createUserFiles(String username, String password)
+ String getUserHistoryPath()
+ void setUserHistoryPath(String userHistoryPath)
+ String getUserSavedPath()
+ void setUserSavedPath(String userSavedPath)
}

class TextUI{
- Scanner scanner
+ void displayList(ArrayList<String> list, String msg)
+ String promptText(String msg)
+ boolean promptBinary(String msg, String accept, String reject)
+ int promptNumeric(String msg)
+ int promptChoice(ArrayList<String> optionslist, String msg)
+ static void displayMsg(String s)
}

interface IVideo {
String getReleaseDate()
String getName()
String getGenre()
float getRating()
}

abstract Class Video{
- String name
- String genre
- float rating
- String releaseDate
'constructor
+ Video(String name, String releaseDate, String genre, float rating)
}

class Series{
- String season
- String episode
+ Series (String name, String releaseDate, String genre, float rating, String episode)
+ getSeason()
+ getEpisode()
}

class Film {
'constructor
+ Film (String name, String releaseDate, String genre, float rating)
}


class Search{
- Scanner scanner
- ArrayList<String> moviesWithGenre
- ArrayList<String> moviesWithName
- ArrayList<String> moviesWithRating
- ArrayList<String> moviesWithReleaseDate
- TextUI TextUI
+ ArrayList<String> searchGenre(ArrayList<String> filmDataList)
+ ArrayList<String> searchName(ArrayList<String> filmDataList)
+ ArrayList<String> searchRating(ArrayList<String> filmDataList)
+ ArrayList<String> searchReleaseDate(ArrayList<String> filmDataList)
+ ArrayList<String> getMoviesWithName()
+ ArrayList<String> getMoviesWithRating()
+ ArrayList<String> getMoviesWithReleaseDate()
+ ArrayList<String> getMoviesWithGenre()

}

IVideo <|-- Video

Video <|-- Series
Video <|-- Film

Main *-- Stream

Stream *-- User
Stream *-- FileIO
Stream *-- TextUI
Search *-- IVideo
Stream *- Search

@enduml